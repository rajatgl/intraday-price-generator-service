buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
    }
}

plugins {
    id 'java'
    id "com.google.cloud.tools.jib" version "3.2.0"
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

sonarqube {
    properties {
        property 'sonar.host.url', 'http://localhost:9000'
    }
}

tasks.named('sonarqube').configure {
    dependsOn test
}

jacocoTestReport {
    reports {
        csv.enabled = false
        xml.enabled = true
        html.enabled = true
    }
    afterEvaluate { // (optional) : to exclude classes / packages from coverage
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(
                    dir: it,
                    exclude: [ 'org/headstrait/intradaypricegenerator/IntradayPriceGeneratorApplication.class'])
        })
    }
}

test.finalizedBy jacocoTestReport
apply plugin: 'org.sonarqube'


sourceCompatibility = "11"
targetCompatibility = "11"
version = "0.0.3"


apply plugin: "com.github.johnrengelman.shadow"

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.slf4j:slf4j-simple:1.7.36"
    implementation "org.apache.kafka:kafka-streams:2.8.1"

    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    testImplementation "org.apache.kafka:kafka-streams-test-utils:2.8.1"
    testImplementation "junit:junit:4.13.2"
    testImplementation 'org.hamcrest:hamcrest:2.2'

    // https://mvnrepository.com/artifact/org.quartz-scheduler/quartz
    implementation 'org.quartz-scheduler:quartz:2.3.2'

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

    // https://mvnrepository.com/artifact/org.mockito/mockito-all
    testImplementation 'org.mockito:mockito-all:1.10.19'

    // https://mvnrepository.com/artifact/org.testcontainers/kafka
    testImplementation 'org.testcontainers:kafka:1.16.2'
}

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compileClasspath.collect { it.getName() }.join(" "),
                "Main-Class": "org.headstrait.intradaypricegenerator.IntradayPriceGeneratorApplication"
        )
    }
}

shadowJar {
    archiveBaseName = "intraday-price-generator-application"
    archiveClassifier = ''
}
